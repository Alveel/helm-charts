# Keycloak hostname configuration
hostname:
  # hostname.admin -- The hostname for accessing the administration console
  admin:
  # hostname.adminUrl -- The base URL for accessing the administration console, including scheme, host, port and path
  adminUrl:
  # hostname.hostname -- Hostname for the Keycloak server, required
  hostname:

# Keycloak database configuration
database:
  # database.name -- # The name of the database
  name:

  # Database credentials
  credentials:
    # database.credentials.secret -- The secret to load the database username and password from
    secret:
    # database.credentials.usernameKey -- The key containing the username in the secret
    usernameKey: DB_USER
    # database.credentials.passwordKey -- The key containing the password in the secret
    passwordKey: DB_PASS

  # Database connection details
  connection:
    # database.connection.vendor -- The database vendor, e.g. postgres
    vendor: postgres
    # database.connection.schema -- The database schema to be used
    schema: postgresql
    # database.connection.host -- The host of the database server
    host:
    # database.connection.port -- The port of the database server
    port: 5432

    # Database connection pooling configuration
    poolingconfig:
      # database.connection.poolingconfig.poolMinSize -- The minimum size of the connection pool
      poolMinSize:
      # database.connection.poolingconfig.poolInitialSize -- The initial size of the connection pool
      poolInitialSize:
      # database.connection.poolingconfig.poolMaxSize -- The maximum size of the connection pool
      poolMaxSize:

# Image configuration
image:
  # image.name -- The name of the image
  name: keycloak/keycloak
  # image.repo -- The image repository
  repo: quay.io
  # image.tag -- The image tag
  tag: 22.0

# instances -- How many instances of Keycloak to deploy
instances: 1

# TLS configuration
tls:
  # tls.secretName -- The name of the secret to use
  secretName:
  # tls.manageCert -- Whether to manage the cert using the cert-manager operator
  manageCert: false
  issuerRef:
    # tls.issuerRef.name -- The name of the certificate issuer to use if manageCert is true
    name:
    # tls.issuerRef.kind -- What kind of issuer to use
    kind: ClusterIssuer
  # tls.duration -- How long the certificate is valid if manageCert is true
  duration: "30d"
